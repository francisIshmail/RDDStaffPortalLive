@model RDDStaffPortal.DAL.DataModels.LMS.RDD_LeaveRequest

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LMSLayout.cshtml";
    var i = 0;
}
@Html.HiddenFor(m => m.HR)
@Html.Hidden(string.Concat("HdnLoginUserId"))
@Html.Hidden(string.Concat("Hdndays"))
@Html.Hidden(string.Concat("HdnRemainLeave"))
@Html.Hidden(string.Concat("HdnEmpId"))
@Html.Hidden(string.Concat("HdnLeaveBalance"))
<link href="~/Scripts/datapicker-separate/daterangepicker.css" rel="stylesheet" />

<style>
    .ui-autocomplete {
        z-index: 5000;
    }
</style>
<div class="p-0 dropdown-header py-3 pt-md-5 pb-md-4 mx-auto">
    <div class="container-fluid">
        <div class="row">
            <div class="loader1"></div>
            <div class="col-md-3">

                @while (Model.WeeklyOffDays.Count > i)
                {
                    <div>@Html.Hidden(string.Concat("Weeklyoff"), Model.WeeklyOffDays[i].WeeklyOff)</div>
                    <div>@Html.Hidden(string.Concat("LeaveRule"), Model.WeeklyOffDays[i].LeaveRules)</div>
                    i++;
                }
                <form>


                    @if (Model.HR == true)
                    {
                        @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeLists, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeLists, new { @class = "form-control", @disabled = "disabled" })

                    }
                </form>
            </div>

            <div class="col-md-3">
                <form>
                    <div class="btnarea"><a href="#" class="previous round">&#8249;</a><strong id="calendarid"> 2021 </strong><a href="#" class="next round next1">&#8250;</a></div>



                </form>
            </div>
            <div class="col-md-3">
                <button type="button" class="btn btn-primary btn-lg " data-toggle="modal" data-target="#exampleModal">Apply Leave</button>

            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-8 col-lg-8 col-xl-9">
            <div class="row">
                <div id="calendar"></div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-md-4 col-lg-4 col-xl-3">
            <div class="card mt-3 mb-3 box-shadow">
                <div class="card-header">
                    <h4 class="my-0 font-weight-bold">Annual Leaves</h4>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mt-0 mb-4" id="ulAnnualDetails">
                        
                    </ul>
                </div>
            </div>
            <div class="card mt-3 mb-3 box-shadow">
                <div class="card-header">
                    <h4 class="my-0 font-weight-bold">Options </h4>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mt-0 mb-4">
                        <li><a href="#"><strong class="blu">Add to regilar calendar </strong></a></li>
                    </ul>
                </div>
            </div>
            
        </div>
    </div>

</div>


<!-- Modal -->
<div class="modal fade modal-fix-top" style="top: 0px; overflow: hidden;" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog col-10" role="document">
        <div class="modal-content">
            <div class="modal-header py-2">
                <h5 class="modal-title" id="exampleModalLabel">APPLY LEAVE</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-6 col-lg-7 bg-white">
                            @*<div class="modal-header">
                                    <div class="rounded-circle blu"><span>SG</span></div>
                                    <div class="headername"><h2>Subhojit Ghosh </h2></div>
                                </div>*@

                            <!-- Button trigger modal -->


                            @while (Model.WeeklyOffDays.Count > i)
                            {
                                <div>@Html.Hidden(string.Concat("Weeklyoff"), Model.WeeklyOffDays[i].WeeklyOff)</div>
                                <div>@Html.Hidden(string.Concat("LeaveRule"), Model.WeeklyOffDays[i].LeaveRules)</div>
                                i++;
                            }

                            <form name="modal-form" method="post" action="">
                                <div class="form-group">
                                    <label for="sel1">Employees:</label>
                                    @if (Model.HR == true)
                                    {
                                        @Html.TextBox(string.Concat("EmployeeIdPopup"), "", new { @class = "form-control form-control-sm txtcheck txtmax", @data_val = "true", @data_val_length = "Name cannot be longer than 50 characters.", @data_val_length_max = "50" })
                                    }
                                    else
                                    { @Html.TextBox(string.Concat("EmployeeIdPopup"), "", new { @class = "form-control form-control-sm txtcheck txtmax", @data_val = "true", @data_val_length = "Name cannot be longer than 50 characters.", @data_val_length_max = "50", @disabled = "disabled" })



                                }
                                    @Html.HiddenFor(m => m.EmployeeIde)

                                    @Html.HiddenFor(m => m.CreatedBy)
                                </div>

                                <div class="form-group">
                                    <label for="sel1">Leave Type <i class="fas fa-star" id=""></i></label>
                                    @*@Html.DropDownList(String.Concat("LeaveTypeId"), new { @class = "form-control" })*@
                                    @Html.HiddenFor(m => m.LeaveTypeId)
                                    <select class="form-control" id="LeaveTypeIde"><option value="0">--Select--</option></select>
                                </div>
                                <div class="form-check-inline mb-2 mr-sm-2">
                                    <label class="form-check-label">
                                        <input class="form-check-input" type="checkbox" id="Isprivate" name="private"> Private
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="email">Date <i class="fas fa-star"></i></label>
                                    @*<div id="date-picker-example" class="md-form md-outline input-with-post-icon datepicker" inline="true">
                                            <input placeholder="02/05/2020 - 02/05/2020" type="text" id="example" class="form-control">
                                        </div>*@
                                    <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                                        <i class="fa fa-calendar"></i>&nbsp;
                                        <span></span> <i class="fa fa-caret-down"></i>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <label for="comment">Comments:</label>
                                    @*<textarea class="form-control" rows="5" id="comment">Trip to Darjeeling</textarea>*@
                                    @Html.TextAreaFor(m => m.Reason, new { @class = "form-control", @rows = "2", @placeholder = "Write some reason" })
                                </div>
                                <div class="form-group">
                                    <label for="comment">Select Backup Person 1:</label>
                                    @Html.TextBox(string.Concat("BackUp"), "", new { @class = "form-control form-control-sm txtcheck txtmax", @data_val = "true", @data_val_length = "Name cannot be longer than 50 characters.", @data_val_length_max = "50" })
                                    <input id="hdnBackUp" type="hidden" />
                                    <label for="comment">Select Backup Person 2:</label>
                                    @Html.TextBox(string.Concat("BackUp2"), "", new { @class = "form-control form-control-sm txtcheck txtmax", @data_val = "true", @data_val_length = "Name cannot be longer than 50 characters.", @data_val_length_max = "50" })
                                    <input id="hdnBackUp2" type="hidden" />

                                    @*<label for="comment">Select Backup Person 2:</label>
        @Html.DropDownListFor(m => m.EmployeeIde, Model.EmployeeListsModal, new { @class = "form-control" })*@
                                </div>
                                <div class="form-group">
                                    <label for="comment">Attachments:</label>
                                    <div class="custom-file">
                                        @*<input type="file" class="custom-file-input" id="customFile">
                                            <label class="custom-file-label" for="customFile">Choose file</label>*@
                                        @Html.TextBoxFor(m => m.AttachmentUrl, new { @class = "file-select-name", type = "File", multiple = "multiple", @Title = "No file chosen...", @text = "No file chosen..." })

                                        @Html.HiddenFor(m => m.AttachmentUrl)
                                    </div>
                                </div>

                            </form>

                        </div>
                        <div class="col-12 col-sm-12 col-md-6 col-lg-5">
                            <div class="rgtside">
                                <div class="modal-body rgttop " style=" width: 100% ; min-height: 350px; max-height: 50%; margin: 20px 0;">


                                    <h6>YOUR REQUEST </h6>
                                    <div class="info-section ">

                                        <div class="alert alert-primary" role="alert" id="random">
                                            No Dates Selected
                                        </div>
                                        <table style="width:100%" id="divDates"></table>
                                    </div>

                                </div>
                                <div class="rgtmid" id="Leavedtls">

                                </div>
                                <div class="modal-footer"><button type="button" class="btn btn-primary btn-lg" id="Btn_Submit">Send Request</button></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>




<!-- Modal
=======================-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
@*<script src="~/Scripts/jquery-3.3.1.min.js"></script>*@
@*<script src="~/Scripts/jquery-ui-1.12.1.js"></script>*@
@*<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="~/Scripts/calendarize.js"></script>
<script src="~/Scripts/RedDotUtility.js"></script>


<script type="text/javascript">


    var arr = "";

    function Getdate1() {
        var arr = "";
        $.ajax({
            async: false,
            cache: false,
            type: "POST",
            url: "/GetBackUpList",
            contentType: "application/json",
            dataType: "json",

            success: function (data) {
                arr = data;
            }
        })
        return arr;
    }
    function getWeeklyoffDayNo() {
        var WeeklyOff = $("#Weeklyoff").val();
        var day;
        if (WeeklyOff == "Sunday") {
            day = 0;
        }
        else if (WeeklyOff == "Monday") {
            day = 1;
        }
        else if (WeeklyOff == "Tuesday") {
            day = 2;
        }
        else if (WeeklyOff == "Wednesday") {
            day = 3;
        }
        else if (WeeklyOff == "Thursday") {
            day = 4;
        }
        else if (WeeklyOff == "Friday") {
            day = 5;
        }
        else {
            day = 6;
        }


        return day;
    }
    function DateToStringformat(obj) {
        try {

            if (obj != undefined && obj != null) {
                var dt = new Date(obj);
                var _date = dt.getDate();
                var _Month = dt.getMonth();
                if (parseInt(_date) < 10) {
                    _date = '0' + _date;
                }
                if (parseInt(_Month) + 1 < 10) {
                    _Month = '0' + (parseInt(_Month) + 1);
                }
                else {
                    _Month = (parseInt(_Month) + 1)
                }
                SqlDate = _date + '/';
                SqlDate += _Month + '/';
                SqlDate += dt.getFullYear();
                return SqlDate;
            }
        }
        catch (ex) {
            log(ex);
        }
    }
    $(document).ready(function () {
        var seletedDate = moment(new Date());
        var day = getWeeklyoffDayNo();
        function loadCalender() {
            //var xhttp = new XMLHttpRequest();
            // xhttp.open("GET", "http://localhost:8888/calendar_details.json", false);
            //xhttp.open("GET", "https://gist.github.com/vaibhavkk/a485a779c09ec9012a1f63d7a3c10432.js",false)
            var HolidayDetails;
            var EmpId = $("#EmployeeId option:selected").val();
            $.ajax({

                async: false,
                cache: false,
                type: "POST",
                url: '/GETHOLIDAY',
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify({ EmployeeId: EmpId }),
                success: function (data) {


                    var d = new Date();
                    var getyear = d.getFullYear();
                    HolidayDetails = data.Table;



                    //for (var i = 0; i < data.Table.length; i++) {
                    //    var getm = DateToStringformat(data.Table[i].HolidayDate);
                    //    var Name = data.Table[i].HolidayName;
                    //    var HolidayListDetails = getm + '":"' + Name;
                    //    HolidayDetails.push(HolidayListDetails);
                    //}

                }

            });

            return HolidayDetails;



        }
        $(document).on('click', '.next1', function () {
            debugger
            var lastDayOfNextMonth = moment(seletedDate.add(12, "M")).endOf('month');
            seletedDate = lastDayOfNextMonth;
            // Update selected date
            var seletedDate1 = lastDayOfNextMonth.startOf("month").format('MMMM');
            //alert(seletedDate1);
            $("#calendarid").html(seletedDate.year());

            $("#calendar").html("");

            var $calendar = document.getElementById("calendar");
            var currentYear = seletedDate.year();
            var calendarize = new Calendarize();
            var holidayList = loadCalender();
            debugger
            calendarize.buildYearCalendar($calendar, currentYear, holidayList, day);

        });

        $(document).on('click', '.previous', function () {
            debugger
            var lastDayOfPreviousMonth = moment(seletedDate.add(-12, "M")).endOf('month');
            seletedDate = lastDayOfPreviousMonth;
            var seletedDate1 = lastDayOfPreviousMonth.startOf("month").format('MMMM');
            // alert(seletedDate1);
            $("#calendarid").html(seletedDate.year());



            $("#calendar").html("");
            var $calendar = document.getElementById("calendar");
            var currentYear = seletedDate.year();
            var calendarize = new Calendarize();
            var holidayList = loadCalender();
            calendarize.buildYearCalendar($calendar, currentYear, holidayList, day);


        })

        var $calendar = document.getElementById("calendar");
        var currentYear = seletedDate.year();
        var calendarize = new Calendarize();
        var holidayList = loadCalender();

        debugger
        calendarize.buildYearCalendar($calendar, currentYear, holidayList, day);
    })

    function GetLeaveBalance(Empid, Leavetypeid) {
        $.ajax({
            async: false,
            cache: false,
            type: "POST",
            url: "/GetLeaveBalance",
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify({ EmployeeId: Empid, LeaveTypeId: Leavetypeid }),
            success: function (data) {
                debugger
                $("#HdnLeaveBalance").val(data.Table[0].Balance);

            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }

        });
    }
    
    function GetDashboardData(EmployeeId) {
        $.ajax({
            async: false,
            cache: false,
            type: "POST",
            url: "/GetAnnualLeaveBalance",
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify({ EmployeeId: EmployeeId }),
            success: function (data) {
                $("#ulAnnualDetails").empty();
                debugger
                var TotaltakenLv;
                var TotalBookedLeave;
                //$("#HdnLeaveBalance").val(data.Table[0].Balance);
                
                if (data.Table1[0].TotalTakenLeave == null) {
                    TotaltakenLv = 0;
                }
                else {
                    TotaltakenLv = data.Table1[0].TotalTakenLeave;
                }
                if (data.Table2[0].TotalBookedLeave == null) {
                    TotalBookedLeave = 0;
                }
                else {
                    TotalBookedLeave = data.Table2[0].TotalBookedLeave;
                }
                var RemToTake = data.Table[0].Balance - data.Table1[0].TotalTakenLeave;
                var RemToBook = data.Table[0].Balance - data.Table2[0].TotalBookedLeave;
                var Html;
                Html = '<li><strong>Balance Leave</strong><span>' + data.Table[0].Balance + " " + "days" + '</span></li>';
                Html = Html + '<li><strong>Leaves Taken</strong><span>' + TotaltakenLv + " " + "days" + '</span></li>';
                Html = Html + '<li><strong>Leaves Booked</strong><span>' + TotalBookedLeave + " " + "days" + '</span></li>';
                //Html = Html + '<li><strong>Remaining To Take</strong><span>' + RemToTake + " " + "days" + '</span></li>';
                Html = Html + '<li><strong>Leave Remaining To Book</strong><span>' + RemToBook + " " + "days" + '</span></li>';
                $("#ulAnnualDetails").append(Html);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }

        });
    }
    $(document).on('change', '#EmployeeId', function () {
        
        changeEmpid = $(this).val();
        GetDashboardData(changeEmpid);
    });
    $(document).ready(function () {
        var loginEmpid;
        var changeEmpid;
        var Empides;
        
        loginEmpid = $("#EmployeeId").val();
        //if (loginEmpid != '' || loginEmpid != undefined) {
        //    Empides = loginEmpid;
        //}
        //else {
        //    Empides = changeEmpid;
        //}
        GetDashboardData(loginEmpid);
        $("#backup1").attr("autocomplete", "on");
        $(".loader1").hide();     
        var dayNo = getWeeklyoffDayNo();
        var k1 = Getdate1();
               
        
        
        
        if ($("#HR").val() != "True") {
            var results = k1.filter(function (elem) {
                return elem.Code == $("#EmployeeIde").val();
            });
            $("#EmployeeIdPopup").val(results[0].CodeName);
           results = k1.filter(function (elem) {
                return elem.Code !== $("#EmployeeIde").val();
            });
            //GetEmployeeWeeklyOff();
            applyAutoCompletedata("#BackUp", "#hdnBackUp", "#BackUp2", "#hdnBackUp2", results);
            
            
            
          

        } else {
            applyAutoCompletedata("#EmployeeIdPopup", "#EmployeeIde", "#BackUp", "#hdnBackUp", k1);
            
        }
       
       
        //applyAutoCompletedata("#BackUp", "#hdnBackUp", "#BackUp2", "#hdnBackUp2", k1);
        debugger
        //$("#EmployeeIde").autocomplete({
        //    // This shows the min length of charcters that must be typed before the autocomplete looks for a match.
        //    //minLength: 2,
        //    source: function (request, response) {
        //        var k = $("#EmployeeIde").val().toLowerCase();
        //        var results = k1.filter(function (elem) {
        //            return elem.Text.toLowerCase().indexOf(k) > -1;
        //        });
        //        if (results.length > 0) {
        //            response($.map(results, function (value, key) {
        //                return {
        //                    label: value.Text,
        //                    value: value.Value
        //                }
        //            }));

        //        }
        //    },
        //    focus: function (event, ui) {
        //        $("#EmployeeIde").val(ui.item.Text);
        //        return false;
        //    },
        //    // Once a value in the drop down list is selected, do the following:
        //    select: function (event, ui) {
        //        // place the person.given_name value into the textfield called 'select_origin'...
        //        $("#EmployeeIde").val(ui.item.Text);
        //        // and place the person.id into the hidden textfield called 'link_origin_id'. 
        //        $("#hdnEmployeeIde").val(ui.item.Value);
        //        return false;
        //    }

        //});
        //var found_names = $.grep(k1, function (v) {
        //    return v.Code != $("#hdnEmployeeIde").val();
        //});
        //if (found_names.length > 0) {
        //    applyAutoCompletedata("#BackUp", "#hdnBackUp", found_names);
        //}
        

        //$("#BackUp").autocomplete({
        //    // This shows the min length of charcters that must be typed before the autocomplete looks for a match.
        //    //minLength: 2,
        //    source: function (request, response) {
        //        var k = $("#BackUp").val().toLowerCase();
        //        var results = found_names.filter(function (elem) {
        //            return elem.Text.toLowerCase().indexOf(k) > -1;
        //        });
        //        if (results.length > 0) {
        //            response($.map(results, function (value, key) {
        //                return {
        //                    label: value.Text,
        //                    value: value.Value
        //                }
        //            }));

        //        }
        //    },
        //     focus: function (event, ui) {
        //         $("#BackUp").val(ui.item.Text);
        //        return false;
        //    },
        //    // Once a value in the drop down list is selected, do the following:
        //    select: function (event, ui) {
        //        // place the person.given_name value into the textfield called 'select_origin'...
        //        $("#BackUp").val(ui.item.Text);
        //        // and place the person.id into the hidden textfield called 'link_origin_id'. 
        //        $("#hdnBackUp").val(ui.item.Value);
        //        return false;
        //    }

        //});
        $(document).on('change', '#LeaveTypeIde', function () {          
            $("#LeaveTypeId").val($(this).val());
        });
        $(document).on("focusout", "#EmployeeIdPopup", function () {
            debugger
            $.ajax({
                async: false,
                cache: false,
                type: "Post",
                url: "/LMS/RDD_LeaveRequest/GetCountryWiseLeaveType",
                data: JSON.stringify({ EmployeeId:$("#EmployeeIde").val() }),
                dataType: 'Json',
                contentType: "Application/json",


                success: function (data) {
                    debugger
                    $("#LeaveTypeIde").empty();
                    $("#LeaveTypeIde").append('<option value = 0 selected = "" > -select-</option >');
                    if (data.Table.length > 0) {
                        var i = 0;
                        while (data.Table.length > i) {
                            $("#LeaveTypeIde").append('<option value = ' + data.Table[i].LeaveTypeId + ' selected = "" > ' + data.Table[i].LeaveName + '</option >');
                            i++;
                        }
                        $("#LeaveTypeIde").val('0').trigger('change');

                    }

                }
            });

        });
       
        $('#exampleModal').on('hidden.bs.modal', function (e) {

            $("#Leavedtls").empty();
            $("#divDates").empty();
            $("#random").show();

            $(this)
                .find("input,textarea")
                .val('')
                .end()
            $(this)
                .find("select")
                .trigger('change')
                .end()
        });

        var d = new Date();
        var StrtDate = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate();
        var EndDate = d.getFullYear() + "/" + 12 + "/" + 31;


        RedDot_DateRange_Min_Max_Lms("reportrange", StrtDate, EndDate);

        
        $('#reportrange').on('apply.daterangepicker', function (ev, picker) {
            var currentleave;
            $("#random").hide();
            $("#Leavedtls").empty();
            var d = new Date();
            var StrtDate = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate();
            var EndDate = d.getFullYear() + "/" + 12 + "/" + 31;
            var fromdate = $('#reportrange').data('daterangepicker').startDate.format('YYYY-MM-DD');
            var todate = $('#reportrange').data('daterangepicker').endDate.format('YYYY-MM-DD');

            var startMin1 = new Date(moment(fromdate, 'YYYY-MM-DD').add(-1, 'days'));

            var days = daysdifference(fromdate, todate);
            var arr2 = getDateArray(fromdate, todate);
            var startMin = moment(fromdate, 'YYYY-MM-DD');
            startMin = new Date(startMin);
            var startdayMin = ("0" + startMin.getDate()).slice(-2);
            var startmonthMin = ("0" + (startMin.getMonth() + 1)).slice(-2);
            var nowMax = moment(todate, 'YYYY-MM-DD');
            nowMax = new Date(nowMax);
            var dayMax = ("0" + nowMax.getDate()).slice(-2);
            var monthMax = ("0" + (nowMax.getMonth() + 1)).slice(-2);
            $('#reportrange span').html(startdayMin + "/" + startmonthMin + "/" + startMin.getFullYear() + ' - ' + dayMax + "/" + monthMax + "/" + nowMax.getFullYear());
            $(this).val(picker.startDate.format('MM/DD/YYYY') + '-' + picker.endDate.format('MM/DD/YYYY'));
            $("#divDates").empty();
            var weeklyoff = $("#Weeklyoff").val();
            var LeaveRule = $("#LeaveRule").val();
            var weekday = new Array(7);
            weekday[0] = "Sunday";
            weekday[1] = "Monday";
            weekday[2] = "Tuesday";
            weekday[3] = "Wednesday";
            weekday[4] = "Thursday";
            weekday[5] = "Friday";
            weekday[6] = "Saturday";
            if (LeaveRule != "WorkingDays") {
                if (weekday[startMin1.getDay()] == weeklyoff) {
                    $('#reportrange').data('daterangepicker').startDate.add(-1, 'day')
                    html = '<tr class="dttype"><td style="width:50%; float:left">';
                    html += '<div id="divLvDates">' + getMonthDetails((startMin1.getMonth())) + '' + startMin1.getDate() + '</div>';
                    html += '</td><td style="width:50%; float:right">';
                    html += '<select name="daytime" class="custom-select" id="ddlDayType" disabled="disabled"> <option value="1">All Day </option> <option value="0.5">half day - morning</option> <option value="0.5">half day - afternoon </option> </select >';
                    html += '</td></tr>';
                    $("#divDates").append(html);
                }
            }

            for (var i = 0; i < arr2.length; i++) {

               
                var date1 = arr2[i].getDate();
                var curyear = d.getFullYear();
                var months = getMonthDetails((arr2[i].getMonth()));
                var html = '<tr class="dttype"><td style="width:50%; float:left">';
                html += '<div id="divLvDates">' + months + '' + date1 + '</div>';
                html += '</td><td style="width:50%; float:right">';
                html += '<select name="daytime" class="custom-select DayType" id="ddlDayType" disabled="disabled"> <option value="1">All Day </option> <option value="0.5">half day - morning</option> <option value="0.5">half day - afternoon </option> </select >';
                html += '</td></tr>';

                if (LeaveRule == "WorkingDays") {
                    if (weekday[arr2[i].getDay()] != weeklyoff) {
                        $("#divDates").append(html);
                    }
                }
                else {
                    $("#divDates").append(html);
                }
            }
            var EmpIde = $("#EmployeeIde").val();
            var LvtypeId = $("#LeaveTypeId").val();
            GetLeaveBalance(EmpIde, LvtypeId);
            currentleave = $("#HdnLeaveBalance").val();
            if (LeaveRule == "CalenderDays") {

                if (weekday[startMin1.getDay()] == weeklyoff) {
                    var remainleave = (currentleave - days);
                    var Header = '<h5><label id="lblDays">' + (days + 1) + '</label> days of annual leave</h5>';
                    Header += '<h5><label id="lblRemaindays">' + (remainleave-1) + '</label> days remaining</h5>';
                    $("#Hdndays").val(days + 1);
                    $("#HdnRemainLeave").val(remainleave);
                    $("#Leavedtls").append(Header);
                }
                else {
                    var remainleave = (currentleave - days);
                    var Header = '<h5><label id="lblDays">' + days + '</label> days of annual leave</h5>';
                    Header += '<h5><label id="lblRemaindays">' + remainleave + '</label> days remaining</h5>';
                    $("#Hdndays").val(days);
                    $("#HdnRemainLeave").val(remainleave);
                    $("#Leavedtls").append(Header);
                }
            }
            else {
                var remainleave = (currentleave - days);
                var Header = '<h5><label id="lblDays">' + days + '</label> days of annual leave</h5>';
                Header += '<h5><label id="lblRemaindays">' + remainleave + '</label> days remaining</h5>';
                $("#Hdndays").val(days);
                $("#HdnRemainLeave").val(remainleave);
                $("#Leavedtls").append(Header);
            }
        });
    });
   

    $(document).on('change', '.DayType', function () {
        //$("#Leavedtls").empty();
        var day = $(this).val();
        var days = $("#lblDays").html();
        //var days = $("#Hdndays").val();
        var RemainLeave = $("#lblRemaindays").html();
        var finalday = days - day;
        days = finalday;
        var finalRemainDay = parseFloat(RemainLeave) + parseFloat(day);
        $("#Leavedtls").empty();
        var Header = '<h5><label id="lblDays">' + finalday + '</label> days of annual leave</h5>';
        Header += '<h5><label id="lblRemaindays">' + finalRemainDay + '</label> days remaining</h5>';
        $("#Leavedtls").append(Header);
    });
    var totalday = 0;

    
    var getDateArray = function (fromdate, todate) {


        var arr = new Array();
        var weekday = new Array(7);
        weekday[0] = "Sunday";
        weekday[1] = "Monday";
        weekday[2] = "Tuesday";
        weekday[3] = "Wednesday";
        weekday[4] = "Thursday";
        weekday[5] = "Friday";
        weekday[6] = "Saturday";
        var arr3 = new Array();
        var dt = new Date(fromdate);
        var fnldt = new Date(todate);
        while (dt <= fnldt) {

            arr.push(new Date(dt));
            arr3.push(weekday[dt.getDay()]);
            dt.setDate(dt.getDate() + 1);
        }

        return arr;

    }

    function daysdifference(FromDate, ToDate) {

        var startDay = new Date(FromDate);
        var endDay = new Date(ToDate);
        var millisBetween = endDay.getTime() - startDay.getTime();
        var days = millisBetween / (1000 * 3600 * 24);
        var finalday = days + 1;
        return finalday;
    }
    function getFullMonth(month) {
        var monthnm;
        if (month == 1) {
            monthnm = "January";
        }
        else if (month == 2) {
            monthnm = "February";
        }
        else if (month == 3) {
            monthnm = "March";
        }
        else if (month == 4) {
            monthnm = "April";
        }
        else if (month == 5) {
            monthnm = "May";
        }
        else if (month == 6) {
            monthnm = "June";
        }
        else if (month == 7) {
            monthnm = "July";
        }
        else if (month == 8) {
            monthnm = "August";
        }
        else if (month == 9) {
            monthnm = "September";
        }
        else if (month == 10) {
            monthnm = "October";
        }
        else if (month == 11) {
            monthnm = "November";
        }
        else if (month == 12) {
            monthnm = "December";
        }
        else {
            monthnm = "undefined";
        }
        return monthnm;

    }

    function getMonthDetails(month) {
        var monthnm;
        if (month == 0) {
            monthnm = "Jan";
        }
        else if (month == 1) {
            monthnm = "Feb";
        }
        else if (month == 2) {
            monthnm = "Mar";
        }
        else if (month == 3) {
            monthnm = "Apr";
        }
        else if (month == 4) {
            monthnm = "May";
        }
        else if (month == 5) {
            monthnm = "Jun";
        }
        else if (month == 6) {
            monthnm = "July";
        }
        else if (month == 7) {
            monthnm = "Aug";
        }
        else if (month == 8) {
            monthnm = "Sep";
        }
        else if (month == 9) {
            monthnm = "Oct";
        }
        else if (month == 10) {
            monthnm = "Nov";
        }
        else if (month == 11) {
            monthnm = "Dec";
        }
        else {
            monthnm = "undefined";
        }
        return monthnm;

    }


    $("#AttachmentUrl").on("change", function () {

        var data = new FormData();
        var files = $("input[id = 'AttachmentUrl']").get(0).files;
        var val = $(this).val();
        switch (val.substring(val.lastIndexOf('.') + 1).toLowerCase()) {
            case 'gif': case 'jpg': case 'png': case 'pdf':
                break;
            default:
                $(this).val('');
                $("input[id='AttachmentUrl'][type='hidden']").val('');
                //$("#FilePathview").removeAttr("href");
                //$("#FilePathview").removeAttr("target");
                // error message here
                RedDotAlert_Error("Only image & pdf");
                return;
                break;
        }
        if (files.length > 0) {
            data.append("Files", files[0]);
            //data.append("type", "Header");
            //  data.append("EmployeeId", $("#EmployeeId").val());
        }
        //$("#RefNo").attr('disabled', true);
        $.ajax({
            url: "/LMS/RDD_LeaveRequest/UploadDoc",
            type: "POST",
            processData: false,
            contentType: false,
            data: data,
            success: function (response) {


                if (response.indexOf("Error occurred") == 0) {
                    $("input[id='AttachmentUrl'][type='hidden']").val('');
                    //$("#FilePathview").removeAttr("href");
                    //$("#FilePathview").removeAttr("target");
                    RedDotAlert_Error(response);
                    // RdotAlerterrtxt("Invalid Image Formate Supported Formate .jpeg/.jpg/.png /.bmp");
                }
                else {
                    $("input[id='AttachmentUrl'][type='hidden']").val(response);
                    //$("#FilePathview").attr("href", $("input[id='FilePath'][type='hidden']").val());
                    //$("#FilePathview").attr("target", "_blank");
                }
            },
            error: function (er) {
                RedDotAlert_Error(er);
            }
        });

    });


    $(document).on('click', '#Btn_Submit', function () {
        $(".loader1").show();
        if ($('#Reason').val().length == 0) {
            RedDotAlert_Error("Please Enter a valid reason");
            $(".loader1").hide();
            return false;
        }
        $(".dttype").each(function () {

            var currow = $(this).closest('tr');
            var LeaveDate = $(this).find("[id^='divLvDates']").html();
            var LeaveDay = $(this).find("[id^='ddlDayType']").val();
            var LeaveDayType = $(this).find("[id^='ddlDayType'] option:selected").text();
            totalday += parseFloat(LeaveDay);
            var LeaveRequestDetails = {
                LeaveDate: LeaveDate,
                LeaveDay: LeaveDay,
                LeaveDayType: LeaveDayType
            };
        });
        var fromdate = $('#reportrange').data('daterangepicker').startDate.format('YYYY-MM-DD');
        var todate = $('#reportrange').data('daterangepicker').endDate.format('YYYY-MM-DD');
        var days = daysdifference(fromdate, todate);
        var day = totalday;
        var RDD_LeaveRequest = {
            EmployeeId: $("#EmployeeIde").val(),
            backupid: $("#hdnBackUp").val(),
            backup2id: $("#hdnBackUp2").val(),  
            LeaveTypeId: $("#LeaveTypeIde option:selected").val(),
            Reason: $("#Reason").val(),
            FromDate: fromdate,
            ToDate: todate,
            NoOfDays: day,
            LeaveStatus: "Pending",
            ApproverRemarks: "NULL",
            IsPrivateLeave: $('input[name="private"]:checked').val(),
            AttachmentUrl: $("#AttachmentUrl[type='hidden']").val(),
            LeaveRequestDetailsList: []
        };

        $(".dttype").each(function () {
            var currow = $(this).closest('tr');
            var LeaveDate = $(this).find("[id^='divLvDates']").html();
            var LeaveDay = $(this).find("[id^='ddlDayType']").val();
            var LeaveDayType = $(this).find("[id^='ddlDayType'] option:selected").text();
            var LeaveRequestDetails = {
                LeaveDate: LeaveDate,
                LeaveDay: LeaveDay,
                LeaveDayType: LeaveDayType
            };
            RDD_LeaveRequest.LeaveRequestDetailsList.push(LeaveRequestDetails);
        });

        $.post("/SaveLeaveRequest", { RDD_LeaveRequest: RDD_LeaveRequest }, function (response) {
            
            $(".loader1").hide();
            /*if (response.data.Saveflag == true && response.data.LeaveRequestId != -1)*/
            if (response[0].Responsemsg == "Leave Request Inserted Successfully") {
                $("#exampleModal").modal("hide");
                RedDotAlert_Success(response[0].Responsemsg);
                debugger
                //var LoginUserid = $("#EmployeeIde").val();
                //var backupid = $("#hdnBackUp").val();
                ////var backup2id = $("#hdnBackUp2").val();
                //window.location.href = "/LMS/RDD_LeaveRequest/SendEmail?LeaveRequestId=" + response[0].Id + "&LoginUserid=" + LoginUserid + "&backupid=" + backupid+ "";

            }
            else {
                RedDotAlert_Error(response[0].Responsemsg);
            }

        });

    });
    $("#email").click(function () {
        window.location.href = "/LMS/RDD_LeaveRequest/SendEmail";
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.day').on('click', function () {
            $('#exampleModal').modal('toggle');
        });
        //$('.lvbtn').on('click', function () {
        //    $('#myModal2').modal('toggle');
        //});

    });
</script>

<script>
    // Add the following code if you want the name of the file appear on select
    $(".custom-file-input").on("change", function () {
        var fileName = $(this).val().split("\\").pop();
        $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });
</script>

@*<script type="text/javascript" src="~/Scripts/calendarize.js"></script>
    <script type="text/javascript">
        var $calendar = document.getElementById("calendar");
        var currentYear = new Date().getFullYear();
        var calendarize = new Calendarize();
        calendarize.buildYearCalendar($calendar, currentYear);
    </script>*@





