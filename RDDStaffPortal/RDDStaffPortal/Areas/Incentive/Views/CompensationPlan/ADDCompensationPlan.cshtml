@model RDDStaffPortal.DAL.DataModels.Incentive.RDD_CompensationPlan

@Html.HiddenFor(m => m.EditFlag, true)
@Html.HiddenFor(m => m.CompPlanId)
@Html.HiddenFor(m=>m.MailFlag, true)

<div class="card-body smform-section">
    <div class="row">
        <div class="col-md-6 col-lg-4">
            <div id="div-EmployeeId" class="form-group form-inline has-error1">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Sales Employee :</label>
                <div class="col-md-8 p-0">
                    @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeList, new { @class = "form-control form-control-sm dropcheck" })

                </div>
            </div>
        </div>
        <div class="col-md-6 col-lg-4">
            <div id="div-Period" class="form-group form-inline has-error1">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Period :</label>
                <div class="col-md-8 p-0">
                    @Html.DropDownListFor(m => m.Period, new List<SelectListItem> { new SelectListItem { Text = "--- Select Period ---", Value = "0" },
                                    new SelectListItem { Text = "H1", Value = "H1" },
                                    new SelectListItem { Text = "H2", Value = "H2" }
                                     }, new { @class = "form-control form-control-sm dropcheck" })
                </div>
            </div>
        </div>

        <div class="col-md-6 col-lg-4">
            <div id="div-Years" class="form-group form-inline has-error1">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Year :</label>
                <div class="col-md-8 p-0">
                    @Html.DropDownListFor(m => m.Years, Model.YearList, new { @class = "form-control form-control-sm dropcheck" })
                </div>
            </div>
        </div>

        <div class="col-md-6 col-lg-4">
            <div id="div-DesigName" class="form-group form-inline">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Designation :</label>
                <div class="col-md-8 p-0">
                    @Html.TextBoxFor(m => m.DesigName, "", new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    @Html.HiddenFor(m => m.DesigId)
                    @Html.HiddenFor(m => m.Email)
                </div>
            </div>
        </div>
        <div class="col-md-6 col-lg-4">
            <div id="div-Currency" class="form-group form-inline has-error1">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Currency :</label>
                <div class="col-md-8 p-0">
                    @Html.DropDownListFor(m => m.Currency, Model.CurrencyList, new { @class = "form-control form-control-sm dropcheck" })
                </div>
            </div>
        </div>

        <div class="col-md-6 col-lg-4">
            <div id="div-TotalCompensation" class="form-group form-inline has-error1">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Total Comp :</label>
                <div class="col-md-8 p-0">
                    @Html.TextBoxFor(m => m.TotalCompensation, "", new { @type = "number", @class = "form-control form-control-sm txtcheck", @min = "0", @oninput = "validity.valid||(value='');" })
                </div>
            </div>
        </div>
        @*<div class="col-md-6 col-lg-4">
            <div class="form-group form-inline">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">KPI Template  :</label>
                <div class="col-md-8 p-0">
                    <select class="form-control form-control-sm" id="">
                        <option>-- select --</option>
                    </select>
                </div>
            </div>
        </div>*@
        <div class="col-md-6 col-lg-4">
            <div id="div-Period" class="form-group form-inline has-error1">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Accepted By Sales Person :</label>
                <div class="col-md-8 p-0">
                    @Html.DropDownListFor(m => m.AcceptedBySalesperson, new List<SelectListItem> { new SelectListItem { Text = "--- Select Action ---", Value = "Pending" },
                                    new SelectListItem { Text = "Accepted", Value = "Accepted" },
                                    new SelectListItem { Text = "Need Changes", Value = "Need Changes" }
                                     }, new { @class = "form-control form-control-sm dropcheck", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="col-md-6 col-lg-4">
            <div id="div-Description" class="form-group form-inline">
                <label for="Database" class="col-md-1 col-form-label p-0 width120px">Reason :</label>
                <div class="col-md-8 p-0">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>

    <div class="panel padd-10 mar-t10 panel-red-border">
        <ul class="nav nav-pills nav-secondary" id="pills-tab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="pills-Sales-tab" data-toggle="pill" href="#pills-Sales" role="tab" aria-controls="pills-Sales" aria-selected="true">Sales</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="pills-KPI-tab" data-toggle="pill" href="#pills-KPI" role="tab" aria-controls="pills-KPI" aria-selected="false">KPI</a>
            </li>
        </ul>
        <div class="tab-content mt-2 mb-3" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-Sales" role="tabpanel" aria-labelledby="pills-Sales-tab">
                <div class="row">
                    <div class="col-xl-8 col-md-8 p-0">
                        <div class="table-responsive">
                            <div class="quick-scroll scrollbar-inner">
                                <div class="reddotTable sm-form m-0">

                                    <div id="tblTargetDetails" class="reddotTableBody">
                                        <div class="reddotTableRow odd-even-row">
                                            <div class="reddotTableHead width20per"><div>BU</div></div>
                                            <div class="reddotTableHead width20per"><div>Revenue Target</div></div>
                                            <div class="reddotTableHead width20per"><div>GP Target</div></div>
                                            <div class="reddotTableHead width20per"><div>Split Revenue</div></div>
                                            <div class="reddotTableHead width20per"><div>Split GP </div></div>
                                        </div>
                                    </div>
                                    <div id="Ibody" class="reddotTableBody">
                                        @if (Model.EditFlag == false)
                                        {

                                        <div id="Ist" class="reddotTableRow odd-even-row OriginatorDet">
                                            <div class="reddotTableCell width20per Abcd"><div></div></div>
                                            <div class="reddotTableCell width20per Abcd">
                                                <div>

                                                </div>
                                            </div>
                                            <div class="reddotTableCell width20per Abcd">
                                                <div>

                                                </div>
                                            </div>

                                            <div class="reddotTableCell width10per Abcd">
                                                <div>
                                                    @Html.TextBox(string.Concat("txtSplitREVpercent"), "0", new { @type = "number", @class = "form-control form-control-sm inputs text1" })

                                                </div>
                                            </div>
                                            <div class="reddotTableCell width10per Abcd">
                                                <div>
                                                    @Html.TextBox(string.Concat("txtSplitGPpercent"), "0", new { @type = "number", @class = "form-control form-control-sm inputs text" })

                                                </div>
                                            </div>
                                        </div>

                                        }

                                        @if (Model.RDD_KPI_CompensationPlanList != null)
                                        {
                                            for (int i = 0; i < Model.RDD_BU_CompensationPlanList.Count(); i++)
                                            {
                                                
                                                <div id="Ist" class="reddotTableRow odd-even-row OriginatorDet">
                                                    <div class="reddotTableCell width20per Abcd"><div>@Model.RDD_BU_CompensationPlanList[i].BU</div></div>
                                                    <div class="reddotTableCell width20per Abcd">
                                                        <div>
                                                            @Model.RDD_BU_CompensationPlanList[i].RevenueTarget
                                                        </div>
                                                    </div>
                                                    <div class="reddotTableCell width20per Abcd">
                                                        <div>
                                                            @Model.RDD_BU_CompensationPlanList[i].GPTarget
                                                        </div>
                                                    </div>

                                                    <div class="reddotTableCell width10per Abcd">
                                                        <div>
                                                            @Html.TextBox(string.Concat("txtSplitREVpercent"), Model.RDD_BU_CompensationPlanList[i].Rev_Split_Percentage, new { @type = "number", @class = "form-control form-control-sm inputs text1" })

                                                        </div>
                                                    </div>
                                                    <div class="reddotTableCell width10per Abcd">
                                                        <div>
                                                            @Html.TextBox(string.Concat("txtSplitGPpercent"), Model.RDD_BU_CompensationPlanList[i].GP_Split_Percentage, new { @type = "number", @class = "form-control form-control-sm inputs text" })

                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                    <div id="" class="reddotTableRow odd-even-row ">
                                        <div class="reddotTableCell width20per"><div></div></div>
                                        <div class="reddotTableCell width20per"><div></div></div>
                                        <div class="reddotTableCell width20per"><div>Total</div></div>
                                        <div class="reddotTableCell width10per"><div>@Html.TextBox(string.Concat("txtTotalREV"), Model.TotalSplitRevPercent, new { @class = "form-control form-control-sm", @readonly = "readonly" })</div></div>
                                        <div class="reddotTableCell width10per ABC"><div>@Html.TextBox(string.Concat("txtTotalGP"), Model.TotalSplitGpPercent, new { @class = "form-control form-control-sm", @readonly = "readonly" })</div></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="pills-KPI" role="tabpanel" aria-labelledby="pills-KPI-tab">

                <div class="row">
                    <div class="col-xl-8 col-md-8 p-0">
                        <div class="table-responsive">
                            <div class="quick-scroll scrollbar-inner">
                                <div class="reddotTable sm-form m-0">

                                    <div id="tblKPIDetails" class="reddotTableBody">
                                        <div class="reddotTableRow odd-even-row">
                                            <div class="reddotTableHead width30per"><div>KPI Parameter </div></div>
                                            <div class="reddotTableHead width10per"><div>Target Numbers</div></div>
                                            <div class="reddotTableHead width10per"><div>Split %</div></div>
                                        </div>
                                    </div>
                                    <div id="IIbody" class="reddotTableBody">
                                        @if (Model.EditFlag == false)
                                        {

                                            <div id="IIst" class="reddotTableRow odd-even-row OriginatorDet1">
                                                <div class="reddotTableCell width30per Abcd"><div></div></div>
                                                <div class="reddotTableCell width10per Abcd">
                                                    <div>
                                                        @Html.TextBox(string.Concat("txtTargetNo"), "0", new { @type = "number", @class = "form-control form-control-sm inputs text2" })

                                                    </div>
                                                </div>
                                                <div class="reddotTableCell width10per Abcd">
                                                    <div>

                                                    </div>
                                                </div>
                                            </div>

                                        }

                                        @if (Model.RDD_KPI_CompensationPlanList != null)
                                        {
                                            for (int i = 0; i < Model.RDD_KPI_CompensationPlanList.Count(); i++)
                                            {
                                                <div id="IIst" class="reddotTableRow odd-even-row OriginatorDet1">
                                                    <div class="reddotTableCell width30per Abcd"><div>@Model.RDD_KPI_CompensationPlanList[i].KPI_Parameter</div></div>
                                                    <div class="reddotTableCell width10per Abcd">
                                                        <div>
                                                            @Html.TextBox(string.Concat("txtTargetNo"), Model.RDD_KPI_CompensationPlanList[i].KPI_Target, new { @class = "form-control form-control-sm inputs text2" })

                                                        </div>
                                                    </div>
                                                    <div class="reddotTableCell width10per Abcd">
                                                        <div>
                                                            @Model.RDD_KPI_CompensationPlanList[i].KPI_Split_Percentage

                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                    <div id="" class="reddotTableRow odd-even-row ">
                                        <div class="reddotTableCell width20per"><div>Total</div></div>
                                        <div class="reddotTableCell width10per"><div>@Html.TextBox(string.Concat("txtTotalTarget"), Model.TargetNumber, new { @class = "form-control form-control-sm", @readonly = "readonly" })</div></div>
                                        <div class="reddotTableCell width10per"><div></div></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>
    @Html.Hidden(string.Concat("HdnRevSplit"))
    @Html.Hidden(string.Concat("HdnGpSplit"))
    @Html.Hidden(string.Concat("HdnCCMail"))
    
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/RedDotUtility.js"></script>

<script type="text/javascript">
    if ($("#EditFlag").val() == "True") {
        $(".txtcheck").each(function (index) {
            if ($("#" + $(this).attr("id") + "").val() !== '') {
                $("#div-" + $(this).attr("id") + "").removeClass('has-error1').addClass('has-success1');
            }
        });
        $(".dropcheck").each(function (index) {
            if ($("#" + $(this).attr("id") + "").val() !== '0') {
                $("#div-" + $(this).attr("id") + "").removeClass('has-error1').addClass('has-success1');
            }
        });
        $(".OriginatorDet").each(function () {
            var HdnEarnOrDeduct = $(this).find("[name^='HdnddlEarnOrDeduct']").val();
            $(this).find("[name^='ddlEarnOrDeduct']").val(HdnEarnOrDeduct).trigger('change');
        });
    }
    $(".txtcheck").blur(function () {
        if ($(this).val() !== '') {
            $("#div-" + $(this).attr("id") + "").removeClass('has-error1').addClass('has-success1');
        }
        else {
            $("#div-" + $(this).attr("id") + "").removeClass('has-success1').addClass('has-error1');
            $(this).val('');
        }
    });
    $(".dropcheck").blur(function () {
        if ($(this).val() !== '0') {
            $("#div-" + $(this).attr("id") + "").removeClass('has-error1').addClass('has-success1');
        }
        else {
            $("#div-" + $(this).attr("id") + "").removeClass('has-success1').addClass('has-error1');
            $(this).val('0').trigger('change');
        }
    });
    @*$(document).on('click', '#btnShowCompCalculation', function () {
        window.location.href = '@Url.Action("Index", "ViewCompensationPlan")';
    });*@
    $(document).ready(function () {
        $("#MailFlag").val("False");
        var Status = $("#AcceptedBySalesperson option:selected").val();
        if (Status == "Accepted") {
            $("#div-Description").hide();
            $('.dropcheck').prop("disabled", true);
            $('.txtcheck').attr("readonly", "readonly");
            $('.text1').attr("readonly", "readonly");
            $('.text2').attr("readonly", "readonly");
            $('.inputs').attr("readonly", "readonly");
            $("#btnSave").hide();
            return;
        }
        if (Status == "Pending") {
            $("#div-Description").hide();
        }
        else {
            $("#div-Description").show();
        }
    });
</script>



